trigger: none

# parameters:
# - name: parameter
#   displayName: parameter
#   type: string
#   default: default

variables:
- name: organization
  value: quind

- name: project
  value: training-quind

stages: 
- stage: stage
  displayName: stage
  jobs:
    - job: 'job'
      pool:
        vmImage: 'ubuntu-20.04'

      steps:

      - script: |
         pip install tabulate

      - task: PythonScript@0
        inputs:
          scriptSource: 'inline'
          script: |
            import requests
            from tabulate import tabulate
            
            url = "https://dev.azure.com/$(organization)/$(project)/_apis/git/repositories?api-version=6.0"
            
            payload = {}
            headers = {
              'Authorization': f'Bearer $(System.AccessToken)'
            }
            
            response = requests.request("GET", url, headers=headers, data=payload)
            data = response.json()
            
            # Convertir el JSON en una lista de diccionarios para tabulate
            table_data = []
            for repo in data['value']:
                table_data.append({
                    'ID': repo['id'],
                    'Nombre del repositorio': repo['name'],
                    'URL': repo['url'],
                    # Agrega más columnas según lo necesites
                })
            
            # Imprimir la tabla
            table_headers = table_data[0].keys()
            print(tabulate(table_data, headers=table_headers, tablefmt="grid"))