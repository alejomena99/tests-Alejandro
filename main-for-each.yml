trigger: none

parameters:

- name: installOks
  displayName: 'Install on OKS'
  type: boolean

- name: installAks
  displayName: 'Install on AKS'
  type: boolean

- name: installAks2
  displayName: 'Install on AKS 2'
  type: boolean

- name: installOke
  displayName: 'Install on OKE'
  type: boolean

- name: branch
  displayName: 'Branch Prefix'
  type: string
  default: dev
  values:
  - dev
  - qa
  # - pdn

- name: createNamespace
  displayName: 'Namespace'
  type: string
  default: none
  values:
  - upgrade
  - delete
  - none

- name: helmOperator
  displayName: 'Operator Helm command'
  type: string
  default: none
  values:
  - upgrade
  - delete
  - none

- name: helmCollector
  displayName: 'Collector Helm command'
  type: string
  default: none
  values:
  - upgrade
  - delete
  - none

- name: helmInstrumentation
  displayName: 'Instrumentation Kube command'
  type: string
  default: none
  values:
  - upgrade
  - delete
  - none

- name: namespace
  displayName: 'Namespace Name (Usar minúsculas y caracter especial guíon -)'
  type: string
  default: ''

- name: resourceQuotaCpu
  displayName: 'ResourceQuota CPU [m]'
  type: string
  default: 'Complete it if you are creating a new namespace.'

- name: resourceQuotaMemory
  displayName: 'ResourceQuota Memory [Mi]'
  type: string
  default: 'Complete it if you are creating a new namespace.'

- name: resourceQuotaPods
  displayName: 'ResourceQuota Pods'
  type: string
  default: 'Complete it if you are creating a new namespace.'

- name: persistentVolumeClaims
  displayName: 'Persistent Volume Claims'
  type: string
  default: 'Complete it if you are creating a new namespace.'

- name: resourceQuotaSecrets
  displayName: 'ResourceQuota Secrets'
  type: string
  default: 'Complete it if you are creating a new namespace.'

- name: resourceQuotaServices
  displayName: 'ResourceQuota Services'
  type: string
  default: 'Complete it if you are creating a new namespace.'

variables:
- name: installCluster
  value: |
    - OKS_${{ parameters.installOks }}
    - AKS_${{ parameters.installAks }}
    - AKS2_${{ parameters.installAks2 }}
    - OKE_${{ parameters.installOke }}

- name: branch
  value: ${{ parameters.branch }}

- name: namespace
  value: ${{ parameters.namespace }}

- name: resourceQuotaCpu
  value: ${{ parameters.resourceQuotaCpu }}

- name: resourceQuotaMemory
  value: ${{ parameters.resourceQuotaMemory }}

- name: resourceQuotaPods
  value: ${{ parameters.resourceQuotaPods }}

- name: persistentVolumeClaims
  value: ${{ parameters.persistentVolumeClaims }}

- name: resourceQuotaSecrets
  value: ${{ parameters.resourceQuotaSecrets }}

- name: resourceQuotaServices
  value: ${{ parameters.resourceQuotaServices }}


jobs:
# - template: Test/main-test.yml
#   parameters:
#     branchOptions: 
#       - ${{ parameters.installOks }}
#       - ${{ parameters.installAks }}


- ${{ if eq(parameters.createNamespace, 'upgrade' ) }}:
  - job: Validate 
    displayName: 'Validate'
    dependsOn: []
    pool:
      name: "Azure Pipelines"
      VmImage: Ubuntu-20.04
      
    steps:
    - script: echo $(branch)
    - script: echo $(namespace)

    - ${{ each value in split(variables.installCluster, '-')}}:
      - ${{ if and(contains(value, 'True'), ne(value, '') ) }}:
        - script: echo ${{ parameters.createNamespace }} ${{ value }}

- ${{ if in(parameters.createNamespace, 'upgrade', 'delete') }}:
  - job: 'namespace'
    displayName: 'Namespace'
    dependsOn: 
      - ${{ if eq(parameters.createNamespace, 'upgrade' ) }}:
        - validate
      # - ${{ if eq(parameters.createNamespace, 'delete' ) }}:
      #   - helm_instrumentation
    pool:
      name: "Azure Pipelines"
      VmImage: Ubuntu-20.04

    steps:

    - ${{ each value in split(variables.installCluster, '-')}}:
      - ${{ if and(contains(value, 'True'), ne(value, '') ) }}:
        - script: echo ${{ parameters.createNamespace }} ${{ value }}

