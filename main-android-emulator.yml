# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

stages:
- stage: stage
  displayName: stage
  jobs:
  - job: 'job'
    pool:
      vmImage: ubuntu-latest

    steps:

    - script: |
        sleep 2m
      displayName: '2 minutes'
      timeoutInMinutes: 1
      continueOnError: true


    - script: echo Hello, world!
      displayName: 'Run a one-line script'

    - task: Bash@3
      displayName: Test on the Android Emulator
      inputs:
        targetType: inline
        script: |
          #!/bin/bash
          timeout 300s bash -c '
            echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "system-images;android-28;google_apis_playstore;x86"
            $ANDROID_HOME/platform-tools/adb devices
            echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test_android_emulator -k "system-images;android-28;google_apis_playstore;x86" --force
            nohup $ANDROID_HOME/emulator/emulator -avd test_android_emulator -no-snapshot > /dev/null 2>&1 &
            $ANDROID_HOME/platform-tools/adb wait-for-device shell "while [[ -z \$(getprop sys.boot_completed | tr -d '\\r') ]]; do sleep 1; done; input keyevent 82"
            echo "Emulator started"
          '
          if [ $? -eq 0 ]; then
            echo "El script se completó dentro del límite de tiempo."
          else
            echo "El script superó el límite de tiempo de 5 minutos y se detuvo."
          fi
      retryCountOnTaskFailure: 3
      
    - script: echo Hello, world!
      displayName: 'Run a one-line script'