# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:

- script: |
    sleep 2m
  displayName: '2 minutes'
  timeoutInMinutes: 1
  continueOnError: true
  # retryCountOnTaskFailure: 3

- script: echo Hello, world!
  displayName: 'Run a one-line script'

- task: Bash@3
  displayName: Test on the Android Emulator
  inputs:
    targetType: inline
    script: |
      #!/bin/bash

      timeout 900s echo \"y\" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install 'system-images;android-28;google_apis_playstore;x86'\n\n$ANDROID_HOME/platform-tools/adb devices\n\necho \"no\" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test_android_emulator -k 'system-images;android-28;google_apis_playstore;x86' --force\n\nnohup $ANDROID_HOME/emulator/emulator -avd test_android_emulator -no-snapshot > /dev/null 2>&1 &\n$ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\\r') ]]; do sleep 1; done; input keyevent 82' \n\necho \"Emulator started\"\n

      if [ $? -eq 124 ]; then
        echo "La instrucción excedió el tiempo límite de 15 minuto."
        exit 1
      fi

      echo "La instrucción se completó en menos de 15 minuto."
  retryCountOnTaskFailure: 3

- script: echo Hello, world!
  displayName: 'Run a one-line script'