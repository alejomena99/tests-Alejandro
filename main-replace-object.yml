trigger: none

variables:
- group: Alejo-test-sonar
- group: alejo-var-back

- name: sonarTest
  value: sonar.verbose=false ; sonar.c.file.suffixes=- ; sonar.cpp.file.suffixes=- ; sonar.objc.file.suffixes=-


stages:
- stage: stage
  displayName: stage
  jobs:
  - job: 'job'
    pool:
      vmImage: ubuntu-latest
    steps:
    - checkout: git://training-quind/training-AlejandroFront@master
      fetchDepth: 1

    - script: |
        sonar_properties="$(sonarPropertiesLibrary2)"
        echo "$sonar_properties" | sed 's/;/\n/g' > sonar-project.properties

    - script: |
        tree
        pwd
    - script: 
        cat sonar-project.properties
      displayName: cat sonar
    - script: 
        echo $(a:b:c)
        echo $(Build.DefinitionName)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/sonar-project.properties'
        ArtifactName: 'drop'
        publishLocation: 'Container'

    # - task: SonarCloudPrepare@1
    #   displayName: 'Configure Static Code Analysis'
    #   inputs:
    #     SonarCloud: 'sonarcloud-Alejandro'
    #     organization: 'quind'
    #     scannerMode: 'CLI'
    #     configMode: 'file'
    #     configFile: '$(System.DefaultWorkingDirectory)/sonar-project.properties'

    # - task: Npm@1
    #   displayName: 'Install Dependencies'
    #   inputs:
    #     workingDir: $(System.DefaultWorkingDirectory)
    #     verbose: true
    
    # - task: Npm@1
    #   displayName: 'jest sonar reporter'
    #   inputs:
    #     command: 'custom'
    #     workingDir: $(System.DefaultWorkingDirectory)
    #     verbose: true
    #     customCommand: 'i -D jest-sonar-reporter'

    # - task: Npm@1
    #   displayName: 'Compile'
    #   inputs:
    #     command: 'custom'
    #     workingDir: $(System.DefaultWorkingDirectory)
    #     verbose: true
    #     customCommand: 'run build'
        
    # - task: SonarCloudAnalyze@1
    #   displayName: 'Configure Static Code Analysis'

    # - task: Npm@1
    #   displayName: 'Unit Tests'
    #   inputs:
    #     command: 'custom'
    #     workingDir: $(System.DefaultWorkingDirectory)
    #     verbose: true
    #     customCommand: 'run test'
        
    # - task: SonarCloudPublish@1
    #   inputs:
    #     pollingTimeoutSec: '300'



